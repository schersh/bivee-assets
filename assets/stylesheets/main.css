/*
 * Bivee.co
 *
 * Designed, built, & written by Bivee.
 * https://github.com/biveeco
 *
 * Nice to see you here, fellow CSS nerd. Give us a shout on Github.
 *
 */
/* /////////////////////////////////////////////////////////////////////////////
// Core style helpers
// -> global settings, helpers, and utility classes
///////////////////////////////////////////////////////////////////////////// */
/*! SassyLists - v2.2.0 - 2014-07-03 */
/* ==========================================================================
 * Helpers for converting units (rems, percent, etc.)
 * ========================================================================== */
/*doc
---
title: Global Variables
name: settings
category: core
---

We keep global settings to a minimum, to keep variables closely tied to the relevant modules/libraries.

Right now, the only globals we need are a few file path helpers: `$path-images`, `$path-icons`, and `$path-fonts`.

*/
/* =============================================================================
// Global breakpoints
// -> uses include-media library (http://include-media.com)
// ===========================================================================*/
/*doc
---
title: Global Breakpoints
name: breakpoints
category: Core
---

A series of global breakpoints are used throughout the site. Note that components often use their own local breakpoints (or "tweakpoints") to handle their layout, but the overall layout is based on the globals.

The breakpoints are simply labelled by size: "xsmall," "small," "medium," "large," and "xlarge."

Utility classes are available for each: `.show@[SIZE]`, e.g. `.show@small` These will hide an element below a particular screen width.

```html_example
<div class="show@medium">You can only see me above "medium" screen sizes.</div>
```

To access a specific breakpoint value in Sass, use the `screen()` function, as in `max-width: screen('large');`, which will compile to `max-width: 75em;`

*/
/* Utility classes
// -------------------------------------------------------------------------- */
@media (min-width: 42.01em) {
  .show\@small {
    display: block; } }

@media (min-width: 62.01em) {
  .show\@medium {
    display: block; } }

/* =============================================================================
//  Global animation styles
// ========================================================================== */
/*doc
---
title: Animation
name: animation
category: core
---

The animation library sets global defaults for CSS transitions. Use it in your modules like this:

```
.your-selector {
    @extend %base-transition;
}
```

*/
a, input, textarea, select {
  -webkit-transition: all 0.5s;
  -moz-transition: all 0.5s;
  transition: all 0.5s; }

/* Globals
// -------------------------------------------------------------------------- */
/* =============================================================================
//  Webfonts
// ========================================================================== */
/*doc
---
title: Fonts
name: fonts
category: core
---

Fonts are accessed through SASS placeholders. Just extend the appropriate one. Fonts are applied to type, globally, in _type.scss, and individual modules can set up their own font styles.

Please DO NOT use your own font-family attributes in any circumstance. Always extend the placeholder.

```
// display fonts
// -> headlines, buttons, labels, etc.

@extend %font-display
@extend %font-display-bold

// body fonts
// -> paragraphs, captions, etc.

@extend %font-body
@extend %font-body-italic
@extend %font-body-bold
```

*/
/* Globals
// -------------------------------------------------------------------------- */
/* ----- Example @font-face ------------------------------------------------- */
/* Font styles
// -> PUBLIC, use these to style type globally & in modules
// -------------------------------------------------------------------------- */
/* ----- Display type ------------------------------------------------------- */
/* ----- Body type ---------------------------------------------------------- */
body, .caption, figcaption, form, input, textarea, select {
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  font-weight: normal;
  font-style: normal; }

/* ----- Ampersands --------------------------------------------------------- */
.amp {
  font-family: "Baskerville", "Palatino", "Book Antiqua", serif;
  font-style: italic;
  font-weight: normal; }

/* use the best ampersands from common system fonts... */
.amp {
  font-size: 1.1em;
  /* relative to whatever type surrounds it -- it renders slightly bigger */
  color: inherit; }

/* ==========================================================================
//  Global color styles
// -> base colors are set here on global elements, but modules apply their own
// -> refer to colors ONLY via the $theme maps
// ========================================================================== */
/*doc
---
title: Color
name: color
category: core
---

Some functions and globals to keep the color scheme DRY and easy to manage in one place. Color for the entire site is handled through structured SASS maps, assigning each color a role:

```
$theme--default: (
    text--primary   : $black,
    text--secondary : #706F6F,
    text--tertiary  : darken($gray, 10),
    bg              : #fff,
    well            : $gray--superlight,
    border          : $gray--light,
    highlight       : $highlight--default,
    accent          : $blue--dark
);

```
You can easily access these colors by "role" with the `theme()` function, like so:

```
.your-module {
    color: theme(highlight);
    background-color: theme(bg);

}
```

If the site has multiple color schemes (say, "default" and "reverse" themes), you can specify the theme by passing in a second parameter:

```
background-color: theme(bg, reverse);
```

The second parameter is optional, and theme() will default to the 'default' theme map.

*/
/* Themes
// -> @extend these to apply a theme to a module
// -------------------------------------------------------------------------- */
body {
  color: #4d4d4d;
  background-color: #fff;
  border-color: #999999; }
  body ::selection {
    color: #fff;
    background: #418FBF;
    text-shadow: none; }
  body ::-moz-selection {
    color: #fff;
    background: #418FBF;
    text-shadow: none; }
  body .well {
    background: #999999; }
  body .highlight {
    color: #418FBF; }

.highlight {
  color: #418FBF; }
  .highlight > a {
    color: inherit; }

/* =============================================================================
// Global layout styles
// ===========================================================================*/
/*doc
---
title: Global layout helpers
name: layout
category: core
---

Global layout styles.

```html_example
<a href="#" class="button l-abs top right">Button @ top right</a>
```

*/
/* Gutters and spacing
// -------------------------------------------------------------------------- */
.l-padding--top {
  padding-top: 19px; }

.l-padding--top.l-padding--wide {
  padding-top: 42px; }

.l-padding--right {
  padding-right: 19px; }

.l-padding--right.l-padding--wide {
  padding-right: 42px; }

.l-padding--bottom {
  padding-bottom: 19px; }

.l-padding--bottom.l-padding--wide {
  padding-bottom: 42px; }

.l-padding--left {
  padding-left: 19px; }

.l-padding--left.l-padding--wide {
  padding-left: 42px; }

.l-padding--all {
  padding: 19px; }

.l-padding--all.l-padding--wide {
  padding: 42px; }

.l-margin--top {
  margin-top: 19px; }

.l-margin--top.l-margin--wide {
  margin-top: 42px; }

.l-margin--right {
  margin-right: 19px; }

.l-margin--right.l-margin--wide {
  margin-right: 42px; }

.l-margin--bottom {
  margin-bottom: 19px; }

.l-margin--bottom.l-margin--wide {
  margin-bottom: 42px; }

.l-margin--left {
  margin-left: 19px; }

.l-margin--left.l-margin--wide {
  margin-left: 42px; }

.l-margin--all {
  margin: 19px; }

.l-margin--all.l-margin--wide {
  margin: 42px; }

/* Content wrappers
// -------------------------------------------------------------------------- */
.l-wrapper, .l-wrapper--narrow, .l-wrapper--wide {
  max-width: 1084px;
  display: block;
  position: relative;
  margin-left: auto;
  margin-right: auto;
  padding-left: 42px;
  padding-right: 42px; }
  .l-wrapper::after, .l-wrapper--narrow::after, .l-wrapper--wide::after {
    clear: both;
    content: "";
    display: table; }
  .l-wrapper--narrow {
    max-width: 764px; }
  .l-wrapper--wide {
    max-width: 1284px; }

/* https://css-tricks.com/NetMag/FluidWidthVideo/Article-FluidWidthVideo.php */
.l-wrapper-video {
  position: relative;
  padding-bottom: 56.25%;
  /* 16:9 aspect ratio */
  padding-top: 25px;
  height: 0; }
  .l-wrapper-video > iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

/* Global z-indexes
// -------------------------------------------------------------------------- */
.l-z_index--bottom {
  z-index: -1 !important; }

.l-z_index--low {
  z-index: 0 !important; }

.l-z_index--middle {
  z-index: 1 !important; }

.l-z_index--top {
  z-index: 2 !important; }

/* Display
// -------------------------------------------------------------------------- */
.l-inline {
  display: inline !important; }

.l-inline_block {
  display: inline-block !important; }

.l-block {
  display: block !important; }

/* Alignment
// -------------------------------------------------------------------------- */
.l-centered {
  text-align: center; }

/* Lists
// -------------------------------------------------------------------------- */
.l-list-undecorated {
  margin-left: 0;
  padding-left: 0;
  list-style: none; }

.l-list-inline {
  margin-left: 0;
  padding-left: 0;
  list-style: none; }
  .l-list-inline li, .l-list-inline dt, .l-list-inline dd {
    display: inline-block;
    margin-right: 1em; }
    .l-list-inline li:last-child, .l-list-inline dt:last-child, .l-list-inline dd:last-child {
      margin-right: 0; }
  .l-list-inline\@xsmall li, .l-list-inline\@xsmall dt, .l-list-inline\@xsmall dd {
    display: block;
    margin-right: 0; }
  @media (min-width: 30.01em) {
    .l-list-inline\@xsmall li, .l-list-inline\@xsmall dt, .l-list-inline\@xsmall dd {
      display: inline-block;
      margin-right: 1em; }
      .l-list-inline\@xsmall li:last-child, .l-list-inline\@xsmall dt:last-child, .l-list-inline\@xsmall dd:last-child {
        margin-right: 0; } }
  .l-list-inline\@small li, .l-list-inline\@small dt, .l-list-inline\@small dd {
    display: block;
    margin-right: 0; }
  @media (min-width: 42.01em) {
    .l-list-inline\@small li, .l-list-inline\@small dt, .l-list-inline\@small dd {
      display: inline-block;
      margin-right: 1em; }
      .l-list-inline\@small li:last-child, .l-list-inline\@small dt:last-child, .l-list-inline\@small dd:last-child {
        margin-right: 0; } }
  .l-list-inline\@medium li, .l-list-inline\@medium dt, .l-list-inline\@medium dd {
    display: block;
    margin-right: 0; }
  @media (min-width: 62.01em) {
    .l-list-inline\@medium li, .l-list-inline\@medium dt, .l-list-inline\@medium dd {
      display: inline-block;
      margin-right: 1em; }
      .l-list-inline\@medium li:last-child, .l-list-inline\@medium dt:last-child, .l-list-inline\@medium dd:last-child {
        margin-right: 0; } }
  .l-list-inline\@large li, .l-list-inline\@large dt, .l-list-inline\@large dd {
    display: block;
    margin-right: 0; }
  @media (min-width: 75.01em) {
    .l-list-inline\@large li, .l-list-inline\@large dt, .l-list-inline\@large dd {
      display: inline-block;
      margin-right: 1em; }
      .l-list-inline\@large li:last-child, .l-list-inline\@large dt:last-child, .l-list-inline\@large dd:last-child {
        margin-right: 0; } }
  .l-list-inline\@huge li, .l-list-inline\@huge dt, .l-list-inline\@huge dd {
    display: block;
    margin-right: 0; }
  @media (min-width: 100.01em) {
    .l-list-inline\@huge li, .l-list-inline\@huge dt, .l-list-inline\@huge dd {
      display: inline-block;
      margin-right: 1em; }
      .l-list-inline\@huge li:last-child, .l-list-inline\@huge dt:last-child, .l-list-inline\@huge dd:last-child {
        margin-right: 0; } }

/* Visibility
// -------------------------------------------------------------------------- */
.l-visually_hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  /*
     * Extends the .visuallyhidden class to allow the element
     * to be focusable when navigated to via the keyboard:
     * https://www.drupal.org/node/897638
     */ }

.l-visually_hidden--focusable {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  /*
     * Extends the .visuallyhidden class to allow the element
     * to be focusable when navigated to via the keyboard:
     * https://www.drupal.org/node/897638
     */ }
  .l-visually_hidden--focusable:active, .l-visually_hidden--focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto; }

/* =============================================================================
// Border settings & helpers
// ===========================================================================*/
/*doc
---
title: Border settings & helpers
name: borders
category: core
---

Some mixins that allow us to keep our border styles DRY and control them from one place. Use these mixins and placeholders instead of writing your own CSS.

```
.your-selector {
    // add the default border radius
    @extend %base-radius;

    // add a thin border on all sides
    @include border(all, thin);

    // add a thick border on the top and left sides with the highlight color
    @include border(top left, thick, theme(highlight));
}
```

*/
.border--top {
  border-top: 1px solid #999999;
  padding-top: 19px; }

.border--right {
  border-right: 1px solid #999999;
  padding-right: 19px; }

.border--bottom {
  border-bottom: 1px solid #999999;
  padding-bottom: 19px; }

.border--left {
  border-left: 1px solid #999999;
  padding-left: 19px; }

.border--all {
  border: 1px solid #999999;
  padding: 19px; }

.no-borders {
  border: none !important; }

.border-round {
  border-radius: 50%; }

/* /////////////////////////////////////////////////////////////////////////////
// Base styles
// -> global element styles: lists, text, images, etc.
///////////////////////////////////////////////////////////////////////////// */
/* =============================================================================
//  Global type styles
// ========================================================================== */
/*doc

Inline text is mostly styled globally and doesn't change a whole lot from one context to another. If you mark it up with relevant tags it should take care of itself. But there are a few helper classes to define special styles:

`.intro`: an italicized introduction to an article. Pretty common in Handshake's features and interviews.

`.caption`: small, secondary text appearing in sidebars and, of course, captions.

`.callout`: a featured passage. It isn't a header, per se, but it's the most important part of the article body. Used, for example, to highlight the question in _1 Question, 9 Experts_.

`.lead`: the first paragraph of an article, decorated with a drop cap, etc. This is usually selected via `.content > p:first-child`, but if you need to imitate those styles in another context, use this class.

*/
/* Globals
// -------------------------------------------------------------------------- */
body {
  line-height: 1.5; }

p {
  font-size: 13px;
  font-size: 0.8125rem; }
  p strong {
    font-weight: bold; }

a {
  text-decoration: none; }

small {
  font-size: 10px;
  font-size: 0.625rem; }

/* Helpers
// -------------------------------------------------------------------------- */
.lead, .content > p:first-of-type {
  font-size: 16px;
  font-size: 1rem; }

.caption, figcaption {
  font-size: 10px;
  font-size: 0.625rem; }

/* =============================================================================
//  Global heading styles
// ========================================================================== */
/*doc
---
title: Headings
name: heading
category: atoms
---

You can make individual headings and groups of headings with both the usual `h1 - h6` tags and also a few helper/microclasses to add special behaviors.

#### Helper classes

`h1 - h6` get global styles, which you can imitate with other tags (like `span`) if needed using these greek fraternity-esque helpers:

```
.alpha // looks like h1
.beta // looks like h2
.cappa // looks like h3
.delta // looks like h4
.epsilon // looks like h5
.zeta // looks like h6
```

`.highlight` is useful for making a heading bright and obnoxious. It will adapt the highlight color of its context (ie blue, orange, whatever).

##### Note on titles and subtitles

It's important to remember that the `h1, h2, h3`, etc. elements are not just for looks: they have a specific purpose in HTML. They're essential to the DOM Tree and, to your browser, they represent the beginning of a new section of content. HTML5 has a variety of what are called "sectioning" elements and headings are the most basic of those (`section`, `article`, and `aside` being more sophisticated sectioning containers).

What does this mean? Don't use an `h3` tag just because you wnat that size and style of type somewhere. Use it only to mark up a third-level section heading. If you just want the look of an `h3` in a non-sectioning context (like an article subtitle), use a generic element like `span` or `p` with the `.cappa` helper class.

Many modules (like `media-box`, `profile`, etc.) define their own special heading submodules to achieve a certain style regardless of the actual markup. If you're working in one of those modules, reach for the submodules first.

*/
h1, .alpha, h2, .beta, h3, .cappa, h4, .delta, h5, .epsilon, h6, .zeta {
  line-height: 1.2;
  margin: 0;
  color: #333; }
  h1 a, .alpha a, h2 a, .beta a, h3 a, .cappa a, h4 a, .delta a, h5 a, .epsilon a, h6 a, .zeta a {
    color: inherit; }
  h1 strong, .alpha strong, h2 strong, .beta strong, h3 strong, .cappa strong, h4 strong, .delta strong, h5 strong, .epsilon strong, h6 strong, .zeta strong {
    font-family: inherit;
    font-style: normal;
    font-weight: normal;
    color: #418FBF; }

/* Globals
// -------------------------------------------------------------------------- */
h1, .alpha {
  font-size: 42px;
  font-size: 2.625rem; }

h2, .beta {
  font-size: 26px;
  font-size: 1.625rem; }

h3, .cappa {
  font-size: 19px;
  font-size: 1.1875rem; }

h4, .delta {
  font-size: 16px;
  font-size: 1rem; }

h5, .epsilon {
  font-size: 13px;
  font-size: 0.8125rem; }

h6, .zeta {
  font-size: 10px;
  font-size: 0.625rem; }

/* =============================================================================
//  Global list styles
// ========================================================================== */
/* Globals
// -------------------------------------------------------------------------- */
li {
  font-size: 13px;
  font-size: 0.8125rem; }
  li strong {
    font-weight: bold; }

li {
  margin-bottom: 0.5em; }

ol, ul {
  margin-left: 1.5em;
  /* bump to the right a little @ mobile sizes so the numbers/bullets don't run off */
  padding-left: 0; }
  @media (min-width: 42.01em) {
    ol, ul {
      margin-left: 0; } }

/* ==========================================================================
//  Global media styles
// ========================================================================== */
audio,
canvas,
img,
video {
  vertical-align: middle;
  max-width: 100%; }

figure {
  margin: 1.5em 0; }

/* =============================================================================
//  Base form styles
// ========================================================================== */
/*doc
---
title: Forms
name: Form
category: atoms
---

*/
/* Base
// -------------------------------------------------------------------------- */
input, textarea, select {
  padding: 0.5em 1em;
  border-radius: 3px;
  box-sizing: border-box;
  box-shadow: none;
  text-shadow: none; }
  input:focus, textarea:focus, select:focus {
    outline: 0;
    outline: thin dotted \9;
    /* IE6-9 */
    box-shadow: none; }

[type="checkbox"] {
  width: 1em;
  height: 1em; }

textarea {
  resize: vertical; }

/* /////////////////////////////////////////////////////////////////////////////
// Components
// -> reusable, composable, self-contained interface elements
///////////////////////////////////////////////////////////////////////////// */
/* --- Atoms ---------------------------------------------------------------- */
/* =============================================================================
//  Title component
// -> a main heading for content
// ========================================================================== */
/*doc
---
title: Title
name: main_nav
category: Atoms
---

*/
/* Base
// -------------------------------------------------------------------------- */
.title {
  display: block;
  margin: 0.5em 0; }

/* Modifiers
// -------------------------------------------------------------------------- */
.title-sub {
  display: block;
  margin: 0.5em 0;
  color: #4d4d4d;
  margin-top: 0.2em; }
  .title + .title-sub {
    margin-top: 0; }
  .title-sub strong {
    color: #333; }

.title-slug {
  text-transform: uppercase;
  color: #4d4d4d; }

/* --- Molecules ------------------------------------------------------------ */
/* =============================================================================
//  Main nav component
// ========================================================================== */
/*doc
---
title: Main Nav
name: main_nav
category: Molecules
---

*/
/* Base
// -------------------------------------------------------------------------- */
.main_nav, .main_header-nav {
  margin-left: 0;
  padding-left: 0;
  list-style: none; }
  .main_nav li, .main_header-nav li, .main_nav dt, .main_header-nav dt, .main_nav dd, .main_header-nav dd {
    display: inline-block;
    margin-right: 1em; }
    .main_nav li:last-child, .main_header-nav li:last-child, .main_nav dt:last-child, .main_header-nav dt:last-child, .main_nav dd:last-child, .main_header-nav dd:last-child {
      margin-right: 0; }
  .main_nav > ul, .main_header-nav > ul {
    margin: 0; }

/* Subcomponents
// -------------------------------------------------------------------------- */
/* =============================================================================
//  Billboard component
// -> a main heading for content
// ========================================================================== */
/*doc
---
title: Billboard
name: billboard
category: Molecules
---

*/
/* Base
// -------------------------------------------------------------------------- */
.billboard {
  height: 300px;
  height: 18.75rem;
  display: block;
  padding: 42px;
  background: #333 no-repeat center;
  background-size: cover; }
  @media (min-width: 42.01em) {
    .billboard {
      padding-right: 40%; } }
  @media (min-width: 62.01em) {
    .billboard {
      padding-right: 60%; } }
  .flexbox .billboard {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -moz-box-align: center;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center; }

/* Subcomponents
// -------------------------------------------------------------------------- */
.billboard-content {
  display: block;
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1; }

/* --- Organisms ------------------------------------------------------------ */
/* =============================================================================
//  Main header component
// ========================================================================== */
/*doc
---
title: Main Header
name: main_header
category: Organisms
---

*/
/* Base
// -------------------------------------------------------------------------- */
.main_header {
  border-bottom: 1px solid #999999;
  display: block;
  height: 40px;
  padding-left: 42px;
  padding-right: 42px; }
  .flexbox .main_header {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -moz-box-align: center;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center;
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    box-pack: justify;
    -webkit-justify-content: space-between;
    -moz-justify-content: space-between;
    -ms-justify-content: space-between;
    -o-justify-content: space-between;
    justify-content: space-between;
    -ms-flex-pack: justify; }

/* Subcomponents
// -------------------------------------------------------------------------- */
.main_header-nav {
  text-align: center; }
  .flexbox .main_header-nav {
    -webkit-box-flex: 1;
    -moz-box-flex: 1;
    box-flex: 1;
    -webkit-flex: 1;
    -moz-flex: 1;
    -ms-flex: 1;
    flex: 1; }

/* =============================================================================
//  Panel component
// -> a large section, approximately screen-sized
// -> main idea is to add whitespace around content
// ========================================================================== */
/*doc
---
title: Panel
name: panel
category: Organisms
---

*/
/* Base
// -------------------------------------------------------------------------- */
.panel, .panel--short, .panel--tall, .panel--centered {
  padding: 42px 42px;
  display: block;
  min-height: 60vh; }

/* Modifiers
// -------------------------------------------------------------------------- */
.panel--short {
  min-height: 40vh; }

.panel--tall {
  min-height: 80vh; }

.panel--centered {
  text-align: center; }
  .flexbox .panel--centered {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -moz-box-align: center;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center; }

/* Subcomponents
// -------------------------------------------------------------------------- */
.panel-content {
  display: block;
  flex: 1; }

/* ==========================================================================
// Gallery module
// -> arrange child elements into even rows and columns
// ========================================================================== */
/*doc
---
title: Gallery
name: gallery
category: organisms
---

A gallery is a grid of small bits of content- usually listings or thumbnails. It breaks the content into even columns and rows. It is responsive, so the column number will change based on screen width, and column width is fluid (percentage-based).

```html_example
    <ul class='gallery'>
        <li class="gallery-item">
            Wow, I'm in a gallery.
        </li>
        <li class="gallery-item">
            Me too.
        </li>
    </ul>
```

Typically, you'll mark up a gallery as an unordered list, but it will work with most block-level elements (like <nav> or <div>). Just give the container a "gallery" class and the children a "gallery-item" class.

There are three (column) size variations: small, medium, and large. Medium is default, so that's the size you get with just "gallery." This only affects overall column width: a "large" gallery will have fewer columns at any given screen size than a "small" gallery. Note any size variation can be used at any screen size. The best choice mainly depends on the type of content you're displaying. If there's lots of text, it might look squished in a "small" gallery, whereas tiny icons might get blown up really huge in a "large" gallery.

```html_example
    <!-- small gallery, with narrow columns -->
    <ul class="gallery small"></ul>

    <!-- default ("medium") gallery -->
    <ul class="gallery"></ul>

    <!-- large gallery with wide columns -->
    <ul class="gallery large"></ul>
```

*/
/* Base
// ---------------------------------------------------------------------------*/
.gallery, .gallery--small, .gallery--large {
  margin-left: 0;
  padding-left: 0;
  list-style: none;
  margin-top: 19px;
  margin-top: 1.1875rem;
  display: block;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: multiple;
  -moz-box-lines: multiple;
  box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -moz-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch;
  position: relative;
  margin-bottom: 0;
  padding-bottom: 0;
  font-size: 0; }
  @media (min-width: 42.01em) {
    .gallery, .gallery--small, .gallery--large {
      display: -webkit-box;
      display: -moz-box;
      display: box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      margin-right: -19px; } }

/* Modifiers
// ---------------------------------------------------------------------------*/
@media (min-width: 30.01em) {
  .gallery--small {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    margin-right: -19px; } }

@media (min-width: 42.01em) {
  .gallery--large {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    margin-right: -19px; } }

.gallery--centered {
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  justify-content: center;
  text-align: center; }

/* Submodules
// ---------------------------------------------------------------------------*/
.gallery-item {
  display: block;
  margin-bottom: 0;
  padding-bottom: 19px;
  font-size: 16px; }
  @media (min-width: 42.01em) {
    .gallery-item {
      display: inline-block;
      width: 50%;
      padding-right: 19px; }
      .flexbox .gallery-item {
        display: block;
        -webkit-box-flex: 0;
        -moz-box-flex: 0;
        box-flex: 0;
        -webkit-flex: 0 0 50%;
        -moz-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
        flex: 0 0 50%;
        width: auto;
        min-width: 1px; } }
  @media (min-width: 62.01em) {
    .gallery-item {
      display: inline-block;
      width: 33.33333%;
      padding-right: 19px; }
      .flexbox .gallery-item {
        display: block;
        -webkit-box-flex: 0;
        -moz-box-flex: 0;
        box-flex: 0;
        -webkit-flex: 0 0 33.33333%;
        -moz-flex: 0 0 33.33333%;
        -ms-flex: 0 0 33.33333%;
        flex: 0 0 33.33333%;
        width: auto;
        min-width: 1px; } }
  @media (min-width: 30.01em) {
    .gallery--small .gallery-item {
      display: inline-block;
      width: 25%;
      padding-right: 19px; }
      .flexbox .gallery--small .gallery-item {
        display: block;
        -webkit-box-flex: 0;
        -moz-box-flex: 0;
        box-flex: 0;
        -webkit-flex: 0 0 25%;
        -moz-flex: 0 0 25%;
        -ms-flex: 0 0 25%;
        flex: 0 0 25%;
        width: auto;
        min-width: 1px; } }
  @media (min-width: 62.01em) {
    .gallery--small .gallery-item {
      display: inline-block;
      width: 20%;
      padding-right: 19px; }
      .flexbox .gallery--small .gallery-item {
        display: block;
        -webkit-box-flex: 0;
        -moz-box-flex: 0;
        box-flex: 0;
        -webkit-flex: 0 0 20%;
        -moz-flex: 0 0 20%;
        -ms-flex: 0 0 20%;
        flex: 0 0 20%;
        width: auto;
        min-width: 1px; } }
  @media (min-width: 42.01em) {
    .gallery--large .gallery-item {
      display: inline-block;
      width: 50%;
      padding-right: 19px; }
      .flexbox .gallery--large .gallery-item {
        display: block;
        -webkit-box-flex: 0;
        -moz-box-flex: 0;
        box-flex: 0;
        -webkit-flex: 0 0 50%;
        -moz-flex: 0 0 50%;
        -ms-flex: 0 0 50%;
        flex: 0 0 50%;
        width: auto;
        min-width: 1px; } }

/* /////////////////////////////////////////////////////////////////////////////
// Styles of Shame
// -> put quick and dirty hacks here, then clean up & organize later
///////////////////////////////////////////////////////////////////////////// */
